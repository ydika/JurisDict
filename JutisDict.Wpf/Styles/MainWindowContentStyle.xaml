<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ext="clr-namespace:JurisDict.Wpf.Extensions"
                    xmlns:mainvm="clr-namespace:JurisDict.Wpf.ViewModels">

    <Storyboard x:Key="storyboard">
        <Storyboard TargetProperty="RenderTransform.Angle">
            <DoubleAnimation From="0" To="360"
                             RepeatBehavior="24:0:0"/>
        </Storyboard>
    </Storyboard>

    <Style x:Key="loadingGrid" TargetType="Grid">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Height" Value="60"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <RotateTransform CenterX="30" CenterY="30" Angle="0"/>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Visibility" Value="Hidden"/>
        <Setter Property="Width" Value="60"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=(mainvm:MainViewModel.IsLoading)}" Value="True">
                <DataTrigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource storyboard}"/>
                </DataTrigger.EnterActions>
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="contentGrid" TargetType="Grid">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=(mainvm:MainViewModel.IsLoading)}" Value="True">
                <Setter Property="Opacity" Value="0.5"/>
                <Setter Property="IsEnabled" Value="False"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="logo" TargetType="TextBlock">
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0 10 0 25"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="navigationPanel" TargetType="Border">
        <Setter Property="Background" Value="#f7f7f7"/>
        <Setter Property="CornerRadius" Value="0 30 30 0"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="6" ShadowDepth="0"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Padding" Value="8"/>
    </Style>

    <Style x:Key="groupNavigationPanel" TargetType="Border">
        <Setter Property="Background" Value="#ffc107"/>
        <Setter Property="CornerRadius" Value="10"/>
        <Setter Property="Padding" Value="8"/>
    </Style>

    <Style x:Key="groupNPHeader" TargetType="TextBlock">
        <Setter Property="FontSize" Value="17"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0 0 0 5"/>
    </Style>

    <Style x:Key="groupNPHeaderBorder" TargetType="Border">
        <Setter Property="BorderBrush" Value="#f7f7f7"/>
        <Setter Property="BorderThickness" Value="0 0 0 2"/>
        <Setter Property="Margin" Value="-8 0"/>
    </Style>

    <Style x:Key="navigationButtonsItemsControl" TargetType="ItemsControl">
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel>
                        <Border x:Name="border"
                                BorderBrush="Black" 
                                BorderThickness="0 1 0 0"
                                Width="{Binding Path=Width, RelativeSource={RelativeSource Mode=Self}}">
                            <ext:IconButton Command="{Binding ClickCommand}"
                                            FontSize="13"
                                            Icon="{Binding Properties.Icon}"
                                            Margin="2"
                                            Text="{Binding Properties.Content}"
                                            Width="Auto"/>
                        </Border>
                    </StackPanel>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=PreviousData}}"
                                     Value="{x:Null}">
                            <Setter Property="BorderThickness" Value="0" TargetName="border"/>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="tableControlPanel" TargetType="StackPanel">
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Orientation" Value="Horizontal"/>
        <Setter Property="Panel.ZIndex" Value="1"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
    </Style>

</ResourceDictionary>